for now, the only class that you should worry about, is the LevelEditorScene.java .
the structure and functions are similar to unity.
there is the init() method that gets called when the scene is created
the update method is called every frame
create gameObjects like the example below

obj1 = new GameObject("Object 1", new Transform(new Vector2f(200, 100), new Vector2f(256, 256)), 1);

it has a name, a transform, and a zIndex

the only component that is available right now is a SpriteRenderer
you can add a SpriteRenderer like below

obj1.addComponent(new SpriteRenderer(new Sprite(AssetPool.getTexture("PATH_TO_YOUR_TEXTURE"))));

NOTE:
after creating a gameObject you NEED to add it to the scene
this.addGameObjectToScene(obj1);

you can use spritesheets too

there is full support for mouse and keyboard too

you can create you own components by extending your class from Component.java class (its something like unity scripts)

you can draw debug lines using DebugDraw class
anything in the scene will be saved and serialized
you can drag and drop from the tester menu

if you dont want v-sync you can find the setting in Window class

please do not remove any of the update function code
just add your own between levelEditorStuff.update(dt) and the for loop

also add your init before loading the scene

there is an onExit function at the end
also DO NOT MESS WITH imgui() function
its very buggy

the physics2D doesnt work yet it doesnt have anything dont get too excited

adding a try catch to the Main class is dumb
dont do it
you can monitor your avgFps and fps using utilTools